import numpy as np
import matplotlib.pyplot as plt

lstmValidationAccuracy = np.loadtxt("lstm/20LSTMCell(1)/tst_ClassAccu")
rnnValidationAccuracy = np.loadtxt("rnn/43sigmoid/tst_ClassAccu")
mlpValidationAccuracy = np.loadtxt("mlp/139sigmoid/tst_ClassAccu")
tdnnValidationAccuracy = np.loadtxt("tdnn/25sigmoid/tst_ClassAccu")
tdnn100ValidationAccuracy = np.loadtxt("tdnn-100/2sigmoid/tst_ClassAccu")
tdnn200ValidationAccuracy = np.loadtxt("tdnn-200/1sigmoid/tst_ClassAccu")

lstmValidationLoss = np.loadtxt("lstm/20LSTMCell(1)/tst_error")
rnnValidationLoss = np.loadtxt("rnn/43sigmoid/tst_error")
mlpValidationLoss = np.loadtxt("mlp/139sigmoid/tst_error")
tdnnValidationLoss = np.loadtxt("tdnn/25sigmoid/tst_error")
tdnn100ValidationLoss = np.loadtxt("tdnn-100/2sigmoid/tst_error")
tdnn200ValidationLoss = np.loadtxt("tdnn-200/1sigmoid/tst_error")

plt.plot(lstmValidationAccuracy, linewidth=2, label='LSTM')
plt.plot(rnnValidationAccuracy, linewidth=2, label='RNN')
plt.plot(mlpValidationAccuracy, linewidth=2, label='MLP')
plt.plot(tdnnValidationAccuracy, linewidth=2, label='TDNN, T=10')
plt.plot(tdnn100ValidationAccuracy, linewidth=2, label='TDNN, T=100')
plt.plot(tdnn200ValidationAccuracy, linewidth=2, label='TDNN, T=200')
plt.ylabel("Percent (%)")
plt.xlabel("Epoch")
plt.title("Recognition Rate")
plt.ylim([-30,103])
plt.legend(loc=4)
plt.grid(True)
plt.show()

plt.plot(lstmValidationLoss, linewidth=2, label='LSTM')
plt.plot(rnnValidationLoss, linewidth=2, label='RNN')
plt.plot(mlpValidationLoss, linewidth=2, label='MLP')
plt.plot(tdnnValidationLoss, linewidth=2, label='TDNN, T=10')
plt.plot(tdnn100ValidationLoss, linewidth=2, label='TDNN, T=100')
plt.plot(tdnn200ValidationLoss, linewidth=2, label='TDNN, T=200')
plt.ylabel("Error")
plt.xlabel("Epoch")
plt.title("Learning Curve")
plt.ylim([-0.01,0.095])
plt.legend(loc=1)
plt.grid(True)
plt.show()

